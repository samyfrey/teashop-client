{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/posts.js","Styles/Button.styled.js","Styles/Community.styled.js","Styles/Card.styled.js","components/Community/RenderPosts.jsx","components/Community/Community.jsx","Styles/PostForm.styled.js","components/Community/PostForm.jsx","components/Community/EditPost.jsx","components/Community/WritePost.jsx","content.js","components/Explore/ProductCard.jsx","components/Explore/Explore.jsx","components/Account/MyAccout.jsx","components/About/About.jsx","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","style","backgroundColor","expand","Container","Brand","color","textDecoration","Toggle","aria-controls","Collapse","Nav","apiUrls","apiUrl","window","location","hostname","signUp","email","username","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","setUsername","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","console","log","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","writePost","title","text","showPost","postId","get","editPost","deletePost","StyledButton","styled","button","StyleCommunity","div","StyledCard","RenderPosts","posts","setRender","handleDelete","_id","editButtons","onClick","map","owner","Community","setPosts","render","fetchData","StyledPostForm","PostForm","handleSubmit","setTitle","setText","EditPost","useParams","updated","setUpdated","WritePost","setRenderPage","createdId","setCreatedId","exploreContent","ref","urlImg","alt","ProductCard","item","layout","Explore","exploreRender","MyAccount","About","App","msgAlerts","setMsgAlerts","uuid","path","element","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c75bee24.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  // console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/myaccount' className='nav-link'>My Account</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Explore</NavLink>\n    <NavLink to='/community' className='nav-link'>Community</NavLink>\n    <NavLink to='/about' className='nav-link'>About</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar\n    style={{ backgroundColor: '#89C889' }}\n    expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          TeaBlog\n\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {/* {user.username && (\n            <span className='navbar-text me-2'>Welcome, {user.username}!</span>\n          )} */}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://morning-garden-24553.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, username, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation,\n      username\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [username, setUsername] = useState('')\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, username, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              name='username'\n              value={username}\n              type='username'\n              placeholder='Choose a username'\n              onChange={event => setUsername(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      console.log('the response from sign in call is', res)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const indexPosts = () => {\n  return axios.get(apiUrl + '/community/')\n}\n\nexport const writePost = (user, title, text) => {\n  console.log('the token is', user.token)\n  return axios.post(apiUrl + '/community/',\n    {\n      post: { title, text }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    })\n}\nexport const showPost = (user, postId) => {\n  return axios.get(`${apiUrl}/community/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const editPost = (user, postId, title, text) => {\n  return axios.patch(`${apiUrl}/community/${postId}`,\n    {\n      post: { title, text }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    })\n}\n\nexport const deletePost = (user, postId) => {\n  return axios.delete(`${apiUrl}/community/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// export const editPost = (user, title, text)\n","import styled from 'styled-components'\n\nexport const StyledButton = styled.button`\n    background-color: green;\n    width: 150px;\n    height: 40px;\n    border: none;\n    border-radius: 10px;\n    color: white;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n`\n\nexport const StyledEditButtons = styled.div`\n    font-size: 30px;\n    color: grey;\n`\n","import styled from 'styled-components'\n\nexport const StyleCommunity = styled.div`\n\n.community__header {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 40px auto;\n\n\n}\n\n`\n","import styled from 'styled-components'\n\nexport const StyledCard = styled.div`\n    display: flex;\n    align-items: center;\n    background-color: #fff;\n    border-radius: 15px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);\n    margin: 40px auto;\n    padding: 40px; \n    flex-direction: 'column';\n    max-width: 700px;\n\n\n    // img { \n    //     width: 20rem;        \n    //     height: 20rem;\n    //     justify-content: center;\n    //     align-items: center;\n    // }\n\n    & > div {\n        flex: 1;\n        justify-content: center;\n        align-items: center;\n\n    }\n\n    @media(max-width: 768px) {\n        flex-direction: column;\n    }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { deletePost } from '../../api/posts'\nimport { StyledCard } from '../../Styles/Card.styled'\n\nconst RenderPosts = ({ user, posts, msgAlert, setRender }) => {\n  const handleDelete = async (post) => {\n    try {\n      const postId = post._id\n      await deletePost(user, postId)\n      setRender(true)\n      msgAlert({\n        heading: 'Post deleted',\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to load',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  const editButtons = (post) => {\n    return (\n      <>\n        <Link to={`/community/${post._id}`}>\n          <button>\n           Edit\n          </button>\n        </Link>\n        <button onClick={() => handleDelete(post)}>Delete</button>\n\n      </>\n\n    )\n  }\n\n  return posts.map((post) => (\n\n    <StyledCard key={post._id}>\n      <div>\n        <h4>{post.title}</h4>\n        <p>{post.text}</p>\n        <div>{post.owner === user?._id && editButtons(post)}</div>\n      </div>\n    </StyledCard>\n\n  ))\n}\n\nexport default RenderPosts\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { indexPosts } from '../../api/posts'\nimport { StyledButton } from '../../Styles/Button.styled'\nimport { StyleCommunity } from '../../Styles/Community.styled'\nimport RenderPosts from './RenderPosts'\n\nconst Community = ({ user, msgAlert }) => {\n  const [posts, setPosts] = useState([])\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await indexPosts()\n        setPosts(res.data.posts)\n      } catch (error) {\n        msgAlert({\n          heading: 'Failed to load posts',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [render])\n\n  return (\n    <>\n      <StyleCommunity>\n        <div className=\"community__header\">\n          <h1>Messages from the community</h1>\n          <div>{user ? <Link to='/community/post' user={user}><StyledButton>Leave a comment</StyledButton></Link> : 'Sign in or sign up to post about your experience!' }</div>\n        </div>\n\n      </StyleCommunity>\n      <div>\n        <RenderPosts user={user} posts={posts} msgAlert={msgAlert} setPosts={setPosts} setRender={setRender}/>\n      </div>\n\n    </>\n  )\n}\n\nexport default Community\n","import styled from 'styled-components'\n\nexport const StyledPostForm = styled.div`\ninput, textarea {\n\nmargin-top: 20px;\n    display: flex;\n    align-items: flex-start;\njustify-content: center;\nflex-direction: column;\nwidth: 90%;\n\n}\n\ninput {\nborder: none;\n}\nbutton {\nmargin: 10px;\n}\n\ntextarea:focus {\n\n}\n\ntextarea {\nheight: 200px\n}\n\n.container {\n// margin: 40px auto;\n// max-width: 700px;\n// border: 3px solid grey;\n}\n`\n","import React from 'react'\nimport { StyledCard } from '../../Styles/Card.styled'\nimport { StyledPostForm } from '../../Styles/PostForm.styled'\n\nconst PostForm = ({ handleSubmit, title, text, setTitle, setText }) => {\n  return (\n    <>\n      <StyledPostForm>\n        <StyledCard>\n\n          <div className='container'>\n            <form onSubmit={handleSubmit} >\n              <input\n                placeholder=\"Title of your post\"\n                name=\"title\"\n                type=\"text\"\n                value={title}\n                onChange={event => setTitle(event.target.value)}\n              />\n              <textarea\n                placeholder=\"Text of your post...\"\n                name=\"text\"\n                type=\"text\"\n                value={text}\n                onChange={event => setText(event.target.value)}\n              />\n              <button type=\"submit\">Post</button>\n            </form>\n          </div>\n        </StyledCard>\n      </StyledPostForm>\n    </>\n  )\n}\n\nexport default PostForm\n","import React, { useEffect, useState } from 'react'\nimport { useParams, Navigate } from 'react-router-dom'\n\nimport { showPost, editPost } from '../../api/posts'\nimport PostForm from './PostForm'\n\nconst EditPost = ({ user, msgAlert }) => {\n  const { postId } = useParams()\n  const [title, setTitle] = useState('')\n  const [text, setText] = useState('')\n  const [updated, setUpdated] = useState(false)\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await showPost(user, postId)\n        setTitle(res.data.post.title)\n        setText(res.data.post.text)\n      } catch (error) {\n        msgAlert({\n          heading: 'Failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    try {\n      await editPost(user, postId, title, text)\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to load',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (updated) {\n    return <Navigate to='/community'/>\n  }\n\n  return (\n    <div>\n      <PostForm handleSubmit={handleSubmit} title={title} text={text} setTitle={setTitle} setText={setText}/>\n    </div>\n  )\n}\n\nexport default EditPost\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n// import { Navigate } from 'react-router-dom'\nimport { writePost } from '../../api/posts'\nimport PostForm from './PostForm'\n\nconst WritePost = ({ user, setRenderPage, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [text, setText] = useState('')\n  const [createdId, setCreatedId] = useState(null)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    try {\n      const res = await writePost(user, title, text)\n      setCreatedId(res.data.post._id)\n      msgAlert({\n        heading: 'Your post was added',\n        message: `Created ${title} successfully.`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to load',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (createdId) {\n    return <Navigate to={'/community'}/>\n  }\n\n  return (\n    <>\n      <PostForm title={title} text={text} setTitle={setTitle} setText={setText} handleSubmit={handleSubmit}/>\n    </>\n  )\n}\n\nexport default WritePost\n","export const exploreContent = [\n  {\n    ref: 'Tea Photo, first explore',\n    id: 1,\n    title: 'Lorem ipsum',\n    text: 'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    urlImg: 'https://images.unsplash.com/photo-1610643625267-aee6dae3ca22?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80',\n    alt: 'Tea Photo'\n  },\n  {\n    ref: 'Second explore',\n    id: 2,\n    title: 'Orci ac auctor augue mauris.',\n    text: 'Massa tincidunt nunc pulvinar sapien et ligula ullamcorper malesuada proin. Gravida arcu ac tortor dignissim. Enim facilisis gravida neque convallis a cras semper. Mi proin sed libero enim sed faucibus turpis. Duis convallis convallis tellus id. Massa eget egestas purus viverra accumsan in nisl nisi.',\n    urlImg: 'https://images.unsplash.com/photo-1554675427-1d637bdb5a12?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=866&q=80',\n    alt: 'Tea Photo'\n  },\n  {\n    ref: 'Third explore',\n    id: 3,\n    title: 'Etiam erat velit scelerisque in dictum.',\n    text: 'Ut enim blandit volutpat maecenas volutpat blandit aliquam etiam erat. Dignissim enim sit amet venenatis urna cursus eget nunc scelerisque. Massa eget egestas purus viverra accumsan. Vel pharetra vel turpis nunc eget lorem dolor sed viverra. Suspendisse interdum consectetur libero id faucibus.',\n    urlImg: 'https://images.unsplash.com/photo-1552841847-0e031d33a283?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=930&q=80',\n    alt: 'Tea Photo'\n  }\n]\n","import React from 'react'\nimport { StyledCard } from '../../Styles/Card.styled'\n\nconst ProductCard = ({ item }) => {\n  return (\n    <>\n      <StyledCard layout={item.id % 2 === 0 && 'row-reverse'}>\n        <div className='text'>\n          <h1>{item.title}</h1>\n          <p>{item.text}</p>\n\n        </div>\n        {/* <div className='=image'>\n          <img src={`${item.urlImg}`} alt={`${item.alt}`}/>\n        </div> */}\n\n      </StyledCard>\n    </>\n  )\n}\n\n//\n\nexport default ProductCard\n","import React from 'react'\nimport { exploreContent } from '../../content'\nimport ProductCard from './ProductCard'\n\nconst Explore = () => {\n  const exploreRender = exploreContent.map((item) => (\n\n    <ProductCard key={item.id} item={item} />\n\n  ))\n\n  return (\n    <div>\n      {exploreRender}\n    </div>\n  )\n}\n\nexport default Explore\n","import React from 'react'\nimport ChangePassword from '../auth/ChangePassword'\n\nconst MyAccount = ({ user, msgAlert }) => {\n  return (\n    <>\n      <ChangePassword msgAlert={msgAlert} user={user} />\n      {user.username &&\n      <h1>Username: {user.username}</h1>}\n    </>\n  )\n}\n\nexport default MyAccount\n","import React from 'react'\nimport { StyledCard } from '../../Styles/Card.styled'\n\nconst About = () => {\n  return (\n    <>\n      <StyledCard>\n        <div>\n          <h4>Meet the founder</h4>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias corrupti ad porro officia? Quas nostrum ex modi unde, error asperiores id placeat delectus, facilis ratione quia laudantium qui eius repudiandae. Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio similique cum et asperiores, reiciendis facilis aspernatur, dicta ipsa adipisci error sunt numquam saepe ullam iusto doloremque consequuntur nam labore accusamus. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat, ab, consectetur laborum expedita ipsam eligendi quasi illum voluptatibus dolorem explicabo esse voluptates est quos minus in sunt? Quo, maiores illo.\n          </p>\n\n        </div>\n\n      </StyledCard>\n    </>\n  )\n}\n\nexport default About\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Community from './components/Community/Community'\nimport EditPost from './components/Community/EditPost'\nimport WritePost from './components/Community/WritePost'\nimport Explore from './components/Explore/Explore'\nimport MyAccount from './components/Account/MyAccout'\nimport About from './components/About/About'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out'\n            element={\n              <SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />\n            }\n          />\n          <Route\n            path='/myaccount'\n            element={<MyAccount msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/'\n            element={<Explore msgAlert={msgAlert} />}\n          />\n          <Route\n            path='/community'\n            element={<Community msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/community/:postId'\n            element={<EditPost msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/community/post'\n            element={<WritePost msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/about'\n            element={<About />}\n          />\n\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}